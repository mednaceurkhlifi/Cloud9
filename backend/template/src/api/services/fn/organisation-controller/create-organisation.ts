/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { filter, map } from 'rxjs/operators';
import { StrictHttpResponse } from '../../strict-http-response';
import { RequestBuilder } from '../../request-builder';

import { Organization } from '../../models/organization';

export interface CreateOrganisation$Params {
    user_email: string;
      body?: {
'requestDTO'?: Organization;
'imageFile'?: Blob;
}
}

export function createOrganisation(http: HttpClient, rootUrl: string, params?: CreateOrganisation$Params, context?: HttpContext): Observable<StrictHttpResponse<Organization>> {
  const rb = new RequestBuilder(rootUrl, createOrganisation.PATH, 'post');
  if (params) {
      rb.path('user_email', params.user_email, {});
    rb.body(params.body, 'multipart/form-data');
  }

  return http.request(
    rb.build({ responseType: 'json', accept: 'application/json', context })
  ).pipe(
    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),
    map((r: HttpResponse<any>) => {
      return r as StrictHttpResponse<Organization>;
    })
  );
}

createOrganisation.PATH = '/organisations/{user_email}';
